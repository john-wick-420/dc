// Exp 10 Linear Code Block
clc; 
clear all; 
close;

// Define message vector and parity submatrix
m = [1 1 1 1]; 
p = [1 1 1; 1 1 0; 0 1 1; 1 0 1];
k = length(m);
Ik = eye(k, k);

// Generate generator matrix G
G = [Ik p]; 
disp("Generator matrix is:");
disp(G);

// Calculate code word C
C = modulo(m * G, 2);
disp("Code word is:");
disp(C);

// Input received code vector and error vector
r = input("Enter received code vector: ");
e = input("Enter received error vector: ");
n = length(C);
In_k = eye(n - k, n - k);

// Generate parity check matrix H
H = [p' In_k];
disp("Parity check matrix:");
disp(H);

// Calculate syndromes
S1 = modulo(r * H', 2);
S2 = modulo(e * H', 2);
disp("Syndrome1 is:");
disp(S1);
disp("Syndrome2 is:");
disp(S2);

// Transpose of H for error checking
HT = H';
if (sum(S1) == 0 & sum(S2) == 0) then
    disp("Correct.");
else
    disp("Received code vector is with error.");
    // Error correction loop
    for i = 1:n
        if S1 == HT(i, :) then
            e = [zeros(1, i - 1) 1 zeros(1, n - i)];
            break;
        end
    end
end

// Calculate the corrected code word
CC = modulo(r + e, 2);
disp("Corrected code word is:");
disp(CC);
